{"version":3,"sources":["components/Gravatar.jsx","components/BadgeList.jsx","images/badge-header.svg","api.js","components/Loader.jsx","components/Pages/PageLoading.jsx","components/Pages/PageError.jsx","components/Pages/Badges.jsx","images/logo conf.svg","components/Badge.jsx","components/BadgeForm.jsx","components/Pages/BadgesNew.jsx","images/logo.svg","components/Nabvar.jsx","components/Layout.jsx","images/astronautas.svg","components/Pages/Home.jsx","components/Pages/BadgeEdit.jsx","components/Modal.jsx","components/DeleteBadgeModal.jsx","components/Pages/BadgeDetails.jsx","components/Pages/BadgeDetailsContainer.jsx","components/Pages/NotFound.jsx","components/App.jsx","index.js"],"names":["Gravatar","props","email","hash","md5","className","src","alt","BadgeList","badgesList","React","useState","query","setQuery","filteredBadges","setFilteredBadges","useMemo","result","filter","badge","firstName","lastName","toLowerCase","includes","useSearchBadges","badges","reverse","length","type","value","onChange","e","target","to","map","lassName","id","twitter","BASE_URL","delay","ms","Promise","resolve","setTimeout","randomNumber","min","max","Math","floor","random","simulateNetworkLatency","callApi","endpoint","a","options","headers","Accept","url","fetch","response","json","data","api","list","create","method","body","JSON","stringify","read","badgeId","update","updates","remove","Loader","Component","PageLoading","PageError","error","message","Badges","state","loading","undefined","fetchData","setState","this","Fragment","confLogo","Badge","jobTitle","BadgeForm","handleChange","handleClick","console","log","onSubmit","name","formValues","onClick","BadgesNew","form","handleSubmit","preventDefault","history","push","header","avatarUrl","Nabvar","logo","Layout","children","Home","platziconfLogoImage","astronautsImage","BadgeEdit","match","params","Modal","isOpen","ReactDOM","createPortal","onClose","document","getElementById","DeleteBadgeModal","onDeleteBadge","BadgeDetails","lasttName","onOpenModal","modalIsOpen","onCloseModal","BadgeDetailsContainer","handleOpenModal","handleCloseModal","handleDeleteBadge","NotFound","App","exact","path","component","container","render"],"mappings":"shBAceA,MAXf,SAAkBC,GACjB,IAAMC,EAAQD,EAAMC,MACdC,EAAOC,IAAIF,GACjB,OACC,qBACCG,UAAWJ,EAAMI,UACjBC,IAAG,sCAAiCH,EAAjC,gBACHI,IAAI,YCmFQC,MAvFf,SAAmBP,GAElB,IAFyB,EAuE1B,SAAyBQ,GAAa,IAAD,EACVC,IAAMC,SAAS,IADL,mBAC7BC,EAD6B,KACtBC,EADsB,OAEQH,IAAMC,SAASF,GAFvB,mBAE7BK,EAF6B,KAEbC,EAFa,KAapC,OAVAL,IAAMM,SAAQ,WACb,IAAMC,EAASR,EAAWS,QAAO,SAACC,GAEjC,MAAO,UAAGA,EAAMC,WAAT,OAAqBD,EAAME,UAChCC,cACAC,SAASX,EAAMU,kBAGlBP,EAAkBE,KAChB,CAACR,EAAYG,IACT,CAAEC,WAAUC,kBAjFyBU,CADzBvB,EAAMwB,OAAOC,WACxBd,EAHiB,EAGjBA,MAAOC,EAHU,EAGVA,SAAUC,EAHA,EAGAA,eACzB,OAA8B,IAA1BA,EAAea,OAEjB,gCACC,sBAAKtB,UAAU,aAAf,UACC,mDACA,uBACCuB,KAAK,OACLvB,UAAU,eACVwB,MAAOjB,EACPkB,SAAU,SAACC,GACVlB,EAASkB,EAAEC,OAAOH,aAIrB,6DACA,cAAC,IAAD,CAAMxB,UAAU,kBAAkB4B,GAAG,cAArC,kCAOF,sBAAK5B,UAAU,aAAf,UACC,sBAAKA,UAAU,aAAf,UACC,mDACA,uBACCuB,KAAK,OACLvB,UAAU,eACVwB,MAAOjB,EACPkB,SAAU,SAACC,GACVlB,EAASkB,EAAEC,OAAOH,aAIrB,oBAAIxB,UAAU,gBAAd,SACES,EAAeoB,KAAI,SAACf,GAEpB,OACC,qBAAId,UAAU,mCAAd,UACC,qBAAKA,UAAU,uBAAf,SACC,eAAC,IAAD,CAAM8B,SAAS,GAAGF,GAAE,kBAAad,EAAMiB,IAAvC,UACC,8BACC,8CADD,IAC4BjB,EAAMC,UADlC,IAC8CD,EAAME,YAEpD,8BACC,4CADD,IAC0BF,EAAMjB,SAEhC,8BACC,+CADD,KAC8BiB,EAAMkB,gBAItC,qBAAKhC,UAAU,yBAAf,SACC,cAAC,EAAD,CACCA,UAAU,gBACVH,MAAOiB,EAAMjB,MACbK,IAAI,eAlB+CY,EAAMiB,aChDnD,MAA0B,yCCAnCE,EAAW,wBAEXC,EAAQ,SAACC,GAAD,OAAQ,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OAC7DI,EAAe,eAACC,EAAD,uDAAO,EAAGC,EAAV,uDAAgB,EAAhB,OACpBC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,GACzCK,EAAyB,eAACL,EAAD,uDAAO,GAAIC,EAAX,uDAAiB,KAAjB,OAC9BP,EAAMK,EAAaC,EAAKC,K,SAEVK,E,8EAAf,WAAuBC,GAAvB,iCAAAC,EAAA,6DAAiCC,EAAjC,+BAA2C,GAA3C,SACOJ,IADP,cAGCI,EAAQC,QAAU,CACjB,eAAgB,mBAChBC,OAAQ,oBAGHC,EAAMnB,EAAWc,EARxB,SASwBM,MAAMD,EAAKH,GATnC,cASOK,EATP,iBAUoBA,EAASC,OAV7B,eAUOC,EAVP,yBAYQA,GAZR,6C,sBAeA,IA+BeC,EA/BH,CACXrC,OAAQ,CACPsC,KADO,WAGN,OAAOZ,EAAQ,YAEhBa,OALO,SAKA7C,GAEN,OAAOgC,EAAQ,UAAW,CACzBc,OAAQ,OACRC,KAAMC,KAAKC,UAAUjD,MAGvBkD,KAZO,SAYFC,GACJ,OAAOnB,EAAQ,WAAD,OAAYmB,KAE3BC,OAfO,SAeAD,EAASE,GACf,OAAOrB,EAAQ,WAAD,OAAYmB,GAAW,CACpCL,OAAQ,MACRC,KAAMC,KAAKC,UAAUI,MAIvBC,OAtBO,SAsBAH,GACN,OAAOnB,EAAQ,WAAD,OAAYmB,GAAW,CACpCL,OAAQ,cC5CSS,G,wKACpB,WACC,OACC,sBAAKrE,UAAU,WAAf,UACC,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,+B,GAZgCsE,cCMrBC,MAPf,WACC,OACC,qBAAKvE,UAAU,cAAf,SACC,cAAC,EAAD,O,MCEYwE,MAJf,SAAmB5E,GAClB,OAAO,sBAAKI,UAAU,YAAf,mBAA6BJ,EAAM6E,MAAMC,QAAzC,mBC+DOC,E,4MA1DdC,MAAc,CAEPC,SAAY,EACZJ,MAAU,KACVjB,UAASsB,G,EAKhBC,U,sBAAW,4BAAA/B,EAAA,6DACV,EAAKgC,SAAS,CAACH,SAAQ,EAAKJ,MAAM,OADxB,kBAGUhB,EAAIrC,OAAOsC,OAHrB,OAGHF,EAHG,OAIT,EAAKwB,SAAS,CAACH,SAAQ,EAAMrB,KAAKA,IAJzB,gDAON,EAAKwB,SAAS,CAAEH,SAAS,EAAMJ,MAAM,EAAD,KAP9B,yD,uDAHX,WACCQ,KAAKF,c,oBAYN,WACC,OAAyB,IAAtBE,KAAKL,MAAMC,QACN,cAAC,EAAD,IAEJI,KAAKL,MAAMH,MACP,cAAC,EAAD,CAAWA,MAAOQ,KAAKL,MAAMH,QAGpC,eAAC,IAAMS,SAAP,WACC,qBAAKlF,UAAU,SAAf,SACC,qBAAKA,UAAU,eAAf,SACC,qBAAKA,UAAU,oBAAf,SACC,qBACCA,UAAU,mBACVC,IAAKkF,EACLjF,IAAI,oBAMR,sBAAKF,UAAU,oBAAf,UACC,qBAAKA,UAAU,kBAAf,SACC,cAAC,IAAD,CAAM4B,GAAG,cAAc5B,UAAU,kBAAjC,yBAKD,qBAAKA,UAAU,cAAf,SACC,qBAAKA,UAAU,mBAAf,SACC,cAAC,EAAD,CAAWoB,OAAQ6D,KAAKL,MAAMpB,qB,GAlDhBnD,IAAMiE,W,QCTZ,G,MAAA,IAA0B,uCCgC1Bc,E,4JA3Bd,WACC,OACC,sBAAKpF,UAAU,QAAf,UACC,qBAAKA,UAAU,gBAAf,SACC,qBAAKC,IAAKkF,EAAUjF,IAAI,gBAEzB,sBAAKF,UAAU,sBAAf,UACC,cAAC,EAAD,CACCA,UAAU,gBACVH,MAAOoF,KAAKrF,MAAMC,MAClBK,IAAI,WAEL,+BACE+E,KAAKrF,MAAMmB,UACZ,uBAFD,IAESkE,KAAKrF,MAAMoB,eAGrB,sBAAKhB,UAAU,uBAAf,UACC,mCAAMiF,KAAKrF,MAAMyF,SAAjB,OACA,kCAAKJ,KAAKrF,MAAMoC,cAEjB,qBAAKhC,UAAU,gBAAf,gC,GAtBgBK,IAAMiE,WCwFXgB,E,4MAzFdV,MAAQ,G,EAGRW,aAAe,SAAC7D,K,EAahB8D,YAAc,SAAC9D,GACd+D,QAAQC,IAAI,qB,4CAMb,WACC,OAEC,aADA,CACA,gBACC,uBAAMC,SAAUV,KAAKrF,MAAM+F,SAA3B,UACC,sBAAK3F,UAAU,aAAf,UACC,2CACA,uBACCyB,SAAUwD,KAAKrF,MAAM6B,SACrBzB,UAAU,eACVuB,KAAK,OACLqE,KAAK,YACLpE,MAAOyD,KAAKrF,MAAMiG,WAAW9E,YAI9B,6CACA,uBACCU,SAAUwD,KAAKrF,MAAM6B,SACrBzB,UAAU,eACVuB,KAAK,OACLqE,KAAK,WACLpE,MAAOyD,KAAKrF,MAAMiG,WAAW7E,WAE9B,0CACA,uBACCS,SAAUwD,KAAKrF,MAAM6B,SACrBzB,UAAU,eACVuB,KAAK,QACLqE,KAAK,QACLpE,MAAOyD,KAAKrF,MAAMiG,WAAWhG,QAE9B,2CACA,uBACC4B,SAAUwD,KAAKrF,MAAM6B,SACrBzB,UAAU,eACVuB,KAAK,OACLqE,KAAK,WACLpE,MAAOyD,KAAKrF,MAAMiG,WAAWR,WAE9B,4CACA,uBACC5D,SAAUwD,KAAKrF,MAAM6B,SACrBzB,UAAU,eACVuB,KAAK,OACLqE,KAAK,UACLpE,MAAOyD,KAAKrF,MAAMiG,WAAW7D,aAG/B,wBAEC8D,QAASb,KAAKO,YACdxF,UAAU,kBAHX,+BAQCiF,KAAKrF,MAAM6E,OACX,oBAAGzE,UAAU,cAAb,cAA6BiF,KAAKrF,MAAM6E,MAAMC,oB,GAlF5BrE,IAAMiE,WC6EfyB,E,4MAtEdnB,MAAQ,CACPC,SAAQ,EACRJ,MAAM,KACNuB,KAAM,CACLjF,UAAW,GACXC,SAAU,GACVnB,MAAO,GACPwF,SAAU,GACVrD,QAAS,K,EAIXuD,aAAe,SAAC7D,GACf,EAAKsD,SAAS,CACbgB,KAAK,2BACD,EAAKpB,MAAMoB,MADX,IAEH,CAACtE,EAAEC,OAAOiE,MAAOlE,EAAEC,OAAOH,W,EAI7ByE,a,uCAAc,WAAMvE,GAAN,SAAAsB,EAAA,6DACbtB,EAAEwE,iBACF,EAAKlB,SAAS,CAAEH,SAAS,EAAMJ,MAAO,OAFzB,kBAIRhB,EAAIrC,OAAOuC,OAAO,EAAKiB,MAAMoB,MAJrB,OAKf,EAAKhB,SAAS,CAAEH,SAAS,IACzB,EAAKjF,MAAMuG,QAAQC,KAAK,WANT,gDAQf,EAAKpB,SAAS,CAACH,SAAQ,EAAMJ,MAAM,EAAD,KARnB,yD,kGAWd,WACC,OAAGQ,KAAKL,MAAMC,QACT,cAAC,EAAD,IAGJ,eAAC,IAAMK,SAAP,WACC,qBAAKlF,UAAU,iBAAf,SACC,qBAAKC,IAAKoG,EAAQnG,IAAI,GAAGF,UAAU,gBAGpC,qBAAKA,UAAU,YAAf,SACC,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,QAAf,SACC,cAAC,EAAD,CACCe,UAAWkE,KAAKL,MAAMoB,KAAKjF,WAAa,aACxCC,SAAUiE,KAAKL,MAAMoB,KAAKhF,UAAY,YACtCnB,MAAOoF,KAAKL,MAAMoB,KAAKnG,OAAS,QAChCwF,SAAUJ,KAAKL,MAAMoB,KAAKX,UAAY,YACtCrD,QAASiD,KAAKL,MAAMoB,KAAKhE,SAAW,UACpCsE,UAAU,0EAIZ,sBAAKtG,UAAU,QAAf,UAEC,gDACA,cAAC,EAAD,CACCyB,SAAUwD,KAAKM,aACfI,SAAUV,KAAKgB,aACfJ,WAAYZ,KAAKL,MAAMoB,KACvBvB,MAAOQ,KAAKL,MAAMH,uB,GA9DFpE,IAAMiE,W,OCRf,MAA0B,iCCoB1BiC,G,kKAfd,WACC,OACC,qBAAKvG,UAAU,SAAf,SACC,qBAAKA,UAAU,kBAAf,SACC,eAAC,IAAD,CAAMA,UAAU,iBAAiB4B,GAAG,IAApC,UACC,qBAAK5B,UAAU,qBAAqBC,IAAKuG,EAAMtG,IAAI,KACnD,sBAAMF,UAAU,oBAAhB,qBACA,sBAAMA,UAAU,mBAAhB,8B,GAReK,IAAMiE,YCQZmC,MAVf,SAAgB7G,GAEf,OAEC,cADA,CACC,IAAMsF,SAAP,WACC,cAAC,EAAD,IACCtF,EAAM8G,aCRK,G,MAAA,IAA0B,yCCOpBC,E,4JACpB,WACC,OACC,qBAAK3G,UAAU,OAAf,SACC,qBAAKA,UAAU,YAAf,SACC,sBAAKA,UAAU,MAAf,UACC,sBAAKA,UAAU,4BAAf,UACC,qBACCC,IAAK2G,EACL1G,IAAI,mBACJF,UAAU,mBAGX,yDACA,cAAC,IAAD,CAAMA,UAAU,kBAAkB4B,GAAG,UAArC,sBAKD,qBAAK5B,UAAU,uCAAf,SACC,qBACCC,IAAK4G,EACL3G,IAAI,aACJF,UAAU,+B,GAvBgBsE,aCqFnBwC,G,kNAnFdlC,MAAQ,CACPC,SAAS,EACTJ,MAAO,KACPuB,KAAM,CACLjF,UAAW,GACXC,SAAU,GACVnB,MAAO,GACPwF,SAAU,GACVrD,QAAS,K,EAOX+C,U,uCAAY,WAAOrD,GAAP,eAAAsB,EAAA,6DACX,EAAKgC,SAAS,CAAEH,SAAS,EAAMJ,MAAO,OAD3B,kBAGShB,EAAIrC,OAAO4C,KAAK,EAAKpE,MAAMmH,MAAMC,OAAO/C,SAHjD,OAGJT,EAHI,OAIV,EAAKwB,SAAS,CAAEH,SAAS,EAAOmB,KAAMxC,IAJ5B,gDAMV,EAAKwB,SAAS,CAAEH,SAAS,EAAOJ,MAAM,EAAD,KAN3B,yD,wDASZc,aAAe,SAAC7D,GACf,EAAKsD,SAAS,CACbgB,KAAK,2BACD,EAAKpB,MAAMoB,MADX,IAEH,CAACtE,EAAEC,OAAOiE,MAAOlE,EAAEC,OAAOH,W,EAI7ByE,a,uCAAe,WAAOvE,GAAP,SAAAsB,EAAA,6DAEdtB,EAAEwE,iBACF,EAAKlB,SAAS,CAAEH,SAAS,EAAMJ,MAAO,OAHxB,kBAKPhB,EAAIrC,OAAO8C,OAAO,EAAKtE,MAAMmH,MAAMC,OAAO/C,QAAS,EAAKW,MAAMoB,MALvD,OAMb,EAAKhB,SAAS,CAAEH,SAAS,IACzB,EAAKjF,MAAMuG,QAAQC,KAAK,WAPX,gDASb,EAAKpB,SAAS,CAAEH,SAAS,EAAOJ,MAAM,EAAD,KATxB,yD,6GApBf,WACCQ,KAAKF,c,oBA+BN,WACC,OAAIE,KAAKL,MAAMC,QACP,cAAC,EAAD,IAGP,eAAC,IAAMK,SAAP,WACC,qBAAKlF,UAAU,kBAAf,SACC,qBAAKC,IAAKoG,EAAQnG,IAAI,GAAGF,UAAU,gBAGpC,qBAAKA,UAAU,YAAf,SACC,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,QAAf,SACC,cAAC,EAAD,CACCe,UAAWkE,KAAKL,MAAMoB,KAAKjF,WAAa,aACxCC,SAAUiE,KAAKL,MAAMoB,KAAKhF,UAAY,YACtCnB,MAAOoF,KAAKL,MAAMoB,KAAKnG,OAAS,QAChCwF,SAAUJ,KAAKL,MAAMoB,KAAKX,UAAY,YACtCrD,QAASiD,KAAKL,MAAMoB,KAAKhE,SAAW,UACpCsE,UAAU,0EAIZ,sBAAKtG,UAAU,QAAf,UAEC,iDACA,cAAC,EAAD,CACCyB,SAAUwD,KAAKM,aACfI,SAAUV,KAAKgB,aACfJ,WAAYZ,KAAKL,MAAMoB,KACvBvB,MAAOQ,KAAKL,MAAMH,uB,GA3EFpE,IAAMiE,Y,YCaf2C,MAjBf,SAAerH,GACd,OAAKA,EAAMsH,OAGJC,IAASC,aAEf,qBAAKpH,UAAU,QAAf,SACC,sBAAKA,UAAU,mBAAf,UACC,wBAAQ8F,QAASlG,EAAMyH,QAASrH,UAAU,sBAA1C,eAGCJ,EAAM8G,cAGTY,SAASC,eAAe,UAZjB,MCcMC,MAlBf,SAA0B5H,GACzB,OACC,cAAC,EAAD,CAAOsH,OAAQtH,EAAMsH,OAAQG,QAASzH,EAAMyH,QAA5C,SACC,sBAAKrH,UAAU,mBAAf,UACC,gDACA,oEACA,gCACC,wBAAQ8F,QAASlG,EAAM6H,cAAezH,UAAU,qBAAhD,sBAGA,wBAAQ8F,QAASlG,EAAMyH,QAASrH,UAAU,sBAA1C,+BC2DU0H,MAjEf,SAAsB9H,GACrB,IAAMkB,EAAQlB,EAAMkB,MACpB,OACC,gCACC,qBAAKd,UAAU,qBAAf,SACC,qBAAKA,UAAU,YAAf,SACC,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,QAAf,SACC,qBAAKC,IAAKkF,EAAUjF,IAAI,gBAEzB,qBAAKF,UAAU,2CAAf,SACC,+BACEc,EAAMC,UADR,IACoBD,EAAME,qBAO9B,qBAAKhB,UAAU,YAAf,SACC,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,MAAf,SACC,cAAC,EAAD,CACCe,UAAWD,EAAMC,UACjBC,SAAUF,EAAM6G,UAChB9H,MAAOiB,EAAMjB,MACbwF,SAAUvE,EAAMuE,SAChBrD,QAASlB,EAAMkB,YAGjB,sBAAKhC,UAAU,MAAf,UACC,yCACA,gCACC,8BACC,cAAC,IAAD,CACCA,UAAU,2BACV4B,GAAE,kBAAad,EAAMiB,GAAnB,SAFH,sBAOD,gCACC,wBACC+D,QAASlG,EAAMgI,YAEf5H,UAAU,0BAHX,sBAQA,cAAC,EAAD,CACCkH,OAAQtH,EAAMiI,YACdR,QAASzH,EAAMkI,aACfL,cAAe7H,EAAM6H,cAHtB,2CCSOM,E,4MA1DdnD,MAAQ,CACPC,SAAS,EACTJ,MAAO,KACPjB,UAAMsB,EACN+C,aAAa,G,EAMd9C,U,sBAAY,4BAAA/B,EAAA,6DACX,EAAKgC,SAAS,CAAEH,SAAS,EAAMJ,MAAO,OAD3B,kBAGShB,EAAIrC,OAAO4C,KAC7B,EAAKpE,MAAMmH,MAAMC,OAAO/C,SAJf,OAGJT,EAHI,OAOV,EAAKwB,SAAS,CAAEH,SAAS,EAAOrB,KAAMA,IAP5B,gDASV,EAAKwB,SAAS,CAAEH,SAAS,EAAOJ,MAAM,EAAD,KAT3B,yD,EAYZuD,gBAAkB,SAACtG,GAClB,EAAKsD,SAAS,CAAE6C,aAAa,K,EAE9BI,iBAAmB,SAACvG,GACnB,EAAKsD,SAAS,CAAE6C,aAAa,K,EAE9BK,kB,uCAAoB,WAAOxG,GAAP,SAAAsB,EAAA,6DACnB,EAAKgC,SAAS,CAAEH,SAAS,EAAMJ,MAAO,OADnB,kBAGZhB,EAAIrC,OAAOgD,OAAO,EAAKxE,MAAMmH,MAAMC,OAAO/C,SAH9B,OAIlB,EAAKe,SAAS,CAAEH,SAAS,IACzB,EAAKjF,MAAMuG,QAAQC,KAAK,WALN,gDAOlB,EAAKpB,SAAS,CAAEH,SAAS,EAAOJ,MAAM,EAAD,KAPnB,yD,6GArBpB,WACCQ,KAAKF,c,oBA8BN,WACC,OAAIE,KAAKL,MAAMC,QACP,cAAC,EAAD,IAEJI,KAAKL,MAAMH,MACP,cAAC,EAAD,CAAWA,MAAOQ,KAAKL,MAAMH,QAKpC,cAAC,EAAD,CACCqD,aAAc7C,KAAKgD,iBACnBL,YAAa3C,KAAK+C,gBAClBH,YAAa5C,KAAKL,MAAMiD,YACxBJ,cAAexC,KAAKiD,kBACpBpH,MAAOmE,KAAKL,MAAMpB,W,GAtDcnD,IAAMiE,WCI3B6D,MARf,WACC,OACC,gCACC,kEACA,sDC6BYC,MAxBf,WACC,OAEC,aADA,CACC,IAAD,UAEC,cAAC,EAAD,UAEC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5B,IACjC,cAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,UAAUC,UAAW5D,IACvC,cAAC,IAAD,CAAO0D,OAAK,EAACC,KAAK,cAAcC,UAAWxC,IAC3C,cAAC,IAAD,CACCsC,OAAK,EACLC,KAAK,mBACLC,UAAWR,IAEZ,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,wBAAwBC,UAAWzB,IAErD,cAAC,IAAD,CAAOyB,UAAWJ,YCXjBK,EAAYlB,SAASC,eAAe,OAG1CJ,IAASsB,OACR,cAAC,EAAD,IAOAD,K","file":"static/js/main.fa74c4e8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport md5 from \"md5\";\r\n\r\nfunction Gravatar(props) {\r\n\tconst email = props.email;\r\n\tconst hash = md5(email);\r\n\treturn (\r\n\t\t<img\r\n\t\t\tclassName={props.className}\r\n\t\t\tsrc={`https://gravatar.com/avatar/${hash}?d=identicon`}\r\n\t\t\talt=\"avatar\"\r\n\t\t/>\r\n\t);\r\n}\r\nexport default Gravatar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./styles/Badge.css\";\r\nimport Gravatar from \"./Gravatar\";\r\n//HOOK->FUNCTIONAL COMPONENT\r\n//MAIN COMPONENT\r\nfunction BadgeList(props) {\r\n\t// const badgesList = [...props.badges].reverse();\r\n\tconst badgesList = props.badges.reverse(); //invertir el orden de la lista de badges\r\n\tconst { query, setQuery, filteredBadges } = useSearchBadges(badgesList);\r\n\tif (filteredBadges.length === 0) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label>Filtrar Badges</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={query}\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tsetQuery(e.target.value); //al ingresar algo al input invoco la funcion setQuery para actualizar el estado\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h3>No encontramos ningun badge</h3>\r\n\t\t\t\t<Link className=\"btn btn-primary\" to=\"/badges/new\">\r\n\t\t\t\t\tCrear nuevo Bagde\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"BadgesList\">\r\n\t\t\t<div className=\"form-group\">\r\n\t\t\t\t<label>Filtrar Badges</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tvalue={query}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetQuery(e.target.value); //al ingresar algo al input invoco la funcion setQuery para actualizar el estado\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<ul className=\"list-unstyled\">\r\n\t\t\t\t{filteredBadges.map((badge) => {\r\n\t\t\t\t\t//badges es la var que me guarda la data del state\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li className=\" container row border my-1 info \" key={badge.id}>\r\n\t\t\t\t\t\t\t<div className=\"text-decoration-none\">\r\n\t\t\t\t\t\t\t\t<Link lassName=\"\" to={`/badges/${badge.id}`}>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<strong> Nombre:</strong> {badge.firstName} {badge.lastName}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<strong>Email:</strong> {badge.email}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<strong>Twitter: </strong> @{badge.twitter}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\" Badge_section-img m-4\">\r\n\t\t\t\t\t\t\t\t<Gravatar\r\n\t\t\t\t\t\t\t\t\tclassName=\"Badge__avatar\"\r\n\t\t\t\t\t\t\t\t\temail={badge.email}\r\n\t\t\t\t\t\t\t\t\talt=\"Avatar\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n//custom hook\r\nfunction useSearchBadges(badgesList) {\r\n\tconst [query, setQuery] = React.useState(\"\");\r\n\tconst [filteredBadges, setFilteredBadges] = React.useState(badgesList); //valor inicial la lista completa de badges\r\n\tReact.useMemo(() => {\r\n\t\tconst result = badgesList.filter((badge) => {\r\n\t\t\t//hago el nombre y apellido un solo string con `` para luego llamar a los metodos sobre todo eso\r\n\t\t\treturn `${badge.firstName}${badge.lastName}`\r\n\t\t\t\t.toLowerCase()\r\n\t\t\t\t.includes(query.toLowerCase());\r\n\t\t}); //regresa los badges que tienen la palabra del query\r\n\r\n\t\tsetFilteredBadges(result);\r\n\t}, [badgesList, query]);\r\n\treturn { setQuery, filteredBadges }; //segundo argumento es una lista que guarda los props que hay que revisar si cambian\r\n}\r\n\r\nexport default BadgeList;\r\n// class BadgesListItem extends React.Component {\r\n// \trender() {\r\n// \t\treturn (\r\n// \t\t\t<div className=\"BadgesListItem\">\r\n// \t\t\t\t<Gravatar\r\n// \t\t\t\t\tclassName=\"BadgesListItem__avatar\"\r\n// \t\t\t\t\temail={this.props.badge.email}\r\n// \t\t\t\t/>\r\n\r\n// \t\t\t\t<div>\r\n// \t\t\t\t\t<strong>\r\n// \t\t\t\t\t\t{this.props.badge.firstName} {this.props.badge.lastName}\r\n// \t\t\t\t\t</strong>\r\n// \t\t\t\t\t<br />@{this.props.badge.twitter}\r\n// \t\t\t\t\t<br />\r\n// \t\t\t\t\t{this.props.badge.jobTitle}\r\n// \t\t\t\t</div>\r\n// \t\t\t</div>\r\n// \t\t);\r\n// \t}\r\n// }\r\n// class BadgesList extends React.Component {\r\n//   render() {\r\n//     if (this.props.badges.length === 0) {\r\n//       return (\r\n//         <div>\r\n//           <h3>No badges were found</h3>\r\n//           <Link className=\"btn btn-primary\" to=\"/badges/new\">\r\n//             Create new badge\r\n//           </Link>\r\n//         </div>\r\n//       );\r\n//     }\r\n//     return (\r\n//       <div className=\"BadgesList\">\r\n//         <ul className=\"list-unstyled\">\r\n//           {this.props.badges.map(badge => {\r\n//             return (\r\n//               <li key={badge.id}>\r\n//                 <BadgesListItem badge={badge} />\r\n//               </li>\r\n//             );\r\n//           })}\r\n//         </ul>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }","export default __webpack_public_path__ + \"static/media/badge-header.3e56976b.svg\";","const BASE_URL = \"http://localhost:3001\";\r\n\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\nconst randomNumber = (min = 0, max = 1) =>\r\n\tMath.floor(Math.random() * (max - min + 1)) + min;\r\nconst simulateNetworkLatency = (min = 30, max = 1500) =>\r\n\tdelay(randomNumber(min, max));\r\n\r\nasync function callApi(endpoint, options = {}) {\r\n\tawait simulateNetworkLatency();\r\n\r\n\toptions.headers = {\r\n\t\t\"Content-Type\": \"application/json\",\r\n\t\tAccept: \"application/json\",\r\n\t};\r\n\r\n\tconst url = BASE_URL + endpoint;\r\n\tconst response = await fetch(url, options);\r\n\tconst data = await response.json();\r\n\r\n\treturn data;\r\n}\r\n\r\nconst api = {\r\n\tbadges: {\r\n\t\tlist() {\r\n\t\t\t// throw new Error(\"Error: 500, content not found\");\r\n\t\t\treturn callApi(\"/badges\");\r\n\t\t},\r\n\t\tcreate(badge) {\r\n\t\t\t// throw new Error(\"Error 500:content not found\");\r\n\t\t\treturn callApi(`/badges`, {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: JSON.stringify(badge),\r\n\t\t\t});\r\n\t\t},\r\n\t\tread(badgeId) {\r\n\t\t\treturn callApi(`/badges/${badgeId}`);\r\n\t\t},\r\n\t\tupdate(badgeId, updates) {\r\n\t\t\treturn callApi(`/badges/${badgeId}`, {\r\n\t\t\t\tmethod: \"PUT\",\r\n\t\t\t\tbody: JSON.stringify(updates),\r\n\t\t\t});\r\n\t\t},\r\n\t\t// Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\r\n\t\tremove(badgeId) {\r\n\t\t\treturn callApi(`/badges/${badgeId}`, {\r\n\t\t\t\tmethod: \"DELETE\",\r\n\t\t\t});\r\n\t\t},\r\n\t},\r\n};\r\n\r\nexport default api;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./Pages/styles/Loader.css\";\r\n\r\nexport default class Loader extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"lds-grid\">\r\n\t\t\t\t<div />\r\n\t\t\t\t<div />\r\n\t\t\t\t<div />\r\n\t\t\t\t<div />\r\n\t\t\t\t<div />\r\n\t\t\t\t<div />\r\n\t\t\t\t<div />\r\n\t\t\t\t<div />\r\n\t\t\t\t<div />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport \"../Pages/styles/PageLoading.css\";\r\nimport Loader from \"../Loader\";\r\nfunction PageLoading() {\r\n\treturn (\r\n\t\t<div className=\"PageLoading\">\r\n\t\t\t<Loader />\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default PageLoading;\r\n","import React from \"react\";\r\n\r\nimport \"./styles/PageError.css\";\r\n\r\nfunction PageError(props) {\r\n\treturn <div className=\"PageError\">❌{props.error.message}😱</div>; //traigo props (state) error de badges\r\n}\r\n\r\nexport default PageError;\r\n","import React from \"react\";\r\nimport \"./styles/Badges.css\";\r\nimport BadgeList from \"../BadgeList\";\r\nimport confLogo from \"../../images/badge-header.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport api from'../../api';\r\nimport PageLoading from './PageLoading';\r\nimport PageError from \"../Pages/PageError\";\r\n\r\nclass Badges extends React.Component {\r\n\tstate    =    {\r\n\t\t//defino estado inicial para que no genere error\r\n\t\t\t\t\t\t\t\tloading:    true,\r\n\t\t\t\t\t\t\t\terror:    null,\r\n\t\t\t\t\t\t\t\tdata:    undefined,\r\n\t};\r\n\tcomponentDidMount(){\r\n\t\tthis.fetchData()\r\n\t}\r\n\tfetchData= async() => {\r\n\t\tthis.setState({loading:true,error:null});//hago esto para futuras ocasiones cuando llame a fetchDATA\r\n\t\ttry {\r\n\t\t\tconst data = await api.badges.list();\r\n\t\t\tthis.setState({loading:false,data:data})//guardo los datos si los encuentro\r\n\t\t}\r\n\t\tcatch (error) {\r\n\t\t\t\t\t\tthis.setState({ loading: false,error:error });//guardamos el error en el state\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tif(this.state.loading ===true){\r\n\t\t\treturn <PageLoading />//aparece y se queda porque no hay nada que lo cambie\r\n\t\t}\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <PageError error={this.state.error}/>; //paso el state.error como props al PageError\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"Badges\">\r\n\t\t\t\t\t<div className=\"Badges__hero\">\r\n\t\t\t\t\t\t<div className=\"Badges__container\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"Badges_conf-logo\"\r\n\t\t\t\t\t\t\t\tsrc={confLogo}\r\n\t\t\t\t\t\t\t\talt=\"conf-logo\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"Badges__container\">\r\n\t\t\t\t\t<div className=\"Badges__buttons\">\r\n\t\t\t\t\t\t<Link to=\"/badges/new\" className=\"btn btn-primary\">\r\n\t\t\t\t\t\t\tnew badge\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* lista de elementos (faker data) */}\r\n\t\t\t\t\t<div className=\"Badge__list\">\r\n\t\t\t\t\t\t<div className=\"Badge__container\">\r\n\t\t\t\t\t\t\t<BadgeList badges={this.state.data} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Badges;\r\n","export default __webpack_public_path__ + \"static/media/logo conf.52fd4d37.svg\";","import React from \"react\";\r\nimport \"./styles/Badge.css\";\r\nimport confLogo from \"../images/badge-header.svg\";\r\nimport Gravatar from \"./Gravatar\";\r\nclass Badge extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Badge\">\r\n\t\t\t\t<div className=\"Badge__header\">\r\n\t\t\t\t\t<img src={confLogo} alt=\"logo conf\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"Badge__section-name\">\r\n\t\t\t\t\t<Gravatar\r\n\t\t\t\t\t\tclassName=\"Badge__avatar\"\r\n\t\t\t\t\t\temail={this.props.email}\r\n\t\t\t\t\t\talt=\"Avatar\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t{this.props.firstName}\r\n\t\t\t\t\t\t<br /> {this.props.lastName}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"Badge__section-info2\">\r\n\t\t\t\t\t<h3> {this.props.jobTitle} </h3>\r\n\t\t\t\t\t<p>@{this.props.twitter}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"Badge__footer\">#platziconf</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Badge;\r\n","import React from \"react\";\r\n\r\nclass BadgeForm extends React.Component {\r\n\tstate = {\r\n\t\t// user_name:'diego' puedo poner un default que cambia cuando modifique el input\r\n\t};\r\n\thandleChange = (e) => {\r\n\t\t// console.log({\r\n\t\t// \tvalue: e.target.value, //contenido ingresado\r\n\t\t// \tname: e.target.name, //nombre del campo ingresado\r\n\t\t// });\r\n\t\t// borro el metodo porque ya no necesito tener esta info aqui\r\n\t\t// this.setState({\r\n\t\t// \t[e.target.name]: e.target.value,\r\n\t\t//user_name:\"diego\",\r\n\t\t//user_lastName:\"dorado\"\r\n\t\t// field: e.target.name, //nombre del input ingresado\r\n\t\t// });\r\n\t};\r\n\thandleClick = (e) => {\r\n\t\tconsole.log(\"boton presionado\");\r\n\t};\r\n\t// handleSubmit = (e) => {\r\n\t// \te.preventDefault(); //evitar que la pagina se recargue\r\n\t// \tconsole.log(this.state);\r\n\t// };\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t//en hadnlesubmit llamo al prop onSubmit que traigo de badgenew y a su vez llama a handle submit\r\n\t\t\t<div>\r\n\t\t\t\t<form onSubmit={this.props.onSubmit}>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label>Nombre</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tonChange={this.props.onChange} //paso la info que ingresen al objeto de onCHANGE\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"firstName\"\r\n\t\t\t\t\t\t\tvalue={this.props.formValues.firstName} // guarde el state {form} de news en formValues y hago bin aqui como props.name\r\n\t\t\t\t\t\t\t// value={this.state.firstName} cuando el form guarda el estado    // asignar el value al estado asi ahorro storage\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{/* apellido */}\r\n\t\t\t\t\t\t<label>Apellido</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tonChange={this.props.onChange} //INPUTS USAN EL PROP ONCHANGE PARA GUARDAR INFO\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"lastName\"\r\n\t\t\t\t\t\t\tvalue={this.props.formValues.lastName} // asigno el valor del input al att de los props\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tonChange={this.props.onChange}\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tvalue={this.props.formValues.email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label>Puesto</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tonChange={this.props.onChange}\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"jobTitle\"\r\n\t\t\t\t\t\t\tvalue={this.props.formValues.jobTitle}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label>Twitter</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tonChange={this.props.onChange}\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"twitter\"\r\n\t\t\t\t\t\t\tvalue={this.props.formValues.twitter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\t// type=\"button\" default submit\r\n\t\t\t\t\t\tonClick={this.handleClick}\r\n\t\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRegistrar||Editar\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{/* condicional que evalua si this.props.error es true */}\r\n\t\t\t\t\t{this.props.error && (\r\n\t\t\t\t\t\t<p className=\"text-danger\"> {this.props.error.message}</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BadgeForm;\r\n","import React from \"react\";\r\nimport \"../styles/BadgeNew.css\";\r\nimport header from \"../../images/logo conf.svg\";\r\nimport Badge from \"../Badge\";\r\nimport BadgeForm from \"../BadgeForm\";\r\nimport PageLoading from \"./PageLoading\";\r\n\r\nimport api from \"../../api\";\r\nclass BadgesNew extends React.Component {\r\n\tstate = {\r\n\t\tloading:false,\r\n\t\terror:null,\r\n\t\tform: {\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName: \"\",\r\n\t\t\temail: \"\",\r\n\t\t\tjobTitle: \"\",\r\n\t\t\ttwitter: \"\",\r\n\t\t},\r\n\t}; // inicio el state vacio con un objeto form\r\n\t//metodo que actualiza el estado llenando el objeto con la info\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\tform: {\r\n\t\t\t\t...this.state.form, // recuperar los valores ingresados\r\n\t\t\t\t[e.target.name]: e.target.value,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\thandleSubmit= async e =>{//lamo a api\r\n\t\te.preventDefault();\r\n\t\tthis.setState({ loading: true, error: null });//estado antes de hacer el POST\r\ntry {\r\n\tawait api.badges.create(this.state.form);\r\nthis.setState({ loading: false });\r\nthis.props.history.push('/badges');//redirecciono a lapagina badges una vez se envie el form\r\n} catch (error){\r\nthis.setState({loading:false,error:error})//error es:error porque se guarda eso y se ignora lo demas\r\n}\r\n\t}\r\n\trender() {\r\n\t\tif(this.state.loading){\r\nreturn <PageLoading />\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"BadgeNew__hero\">\r\n\t\t\t\t\t<img src={header} alt=\"\" className=\"img-fluid\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* main badge */}\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-6\">\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tfirstName={this.state.form.firstName || \"FIRST_NAME\"} //valor por omision por si no existe\r\n\t\t\t\t\t\t\t\tlastName={this.state.form.lastName || \"LAST_NAME\"}\r\n\t\t\t\t\t\t\t\temail={this.state.form.email || \"EMAIL\"}\r\n\t\t\t\t\t\t\t\tjobTitle={this.state.form.jobTitle || \"JOB_TITLE\"}\r\n\t\t\t\t\t\t\t\ttwitter={this.state.form.twitter || \"TWITTER\"}\r\n\t\t\t\t\t\t\t\tavatarUrl=\"https://s.gravatar.com/avatar/daa7525f3216837201eab4dcc82c06df?s=80\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* badge form */}\r\n\t\t\t\t\t\t<div className=\"col-6\">\r\n\t\t\t\t\t\t\t{/* EN EL EVENTO ONCHANGE LLAMO A HANDLE QUE TRAE EL ONCHANGE DEL BADGEFORM */}\r\n\t\t\t\t\t\t\t<h1>Nuevo usuario </h1>\r\n\t\t\t\t\t\t\t<BadgeForm\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange} //paso como prop el handleChange de badgeNew\r\n\t\t\t\t\t\t\t\tonSubmit={this.handleSubmit} //llamo metodo que defino en bagdeform\r\n\t\t\t\t\t\t\t\tformValues={this.state.form} //paso los valores del NEW al FORM\r\n\t\t\t\t\t\t\t\terror={this.state.error}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default BadgesNew;\r\n","export default __webpack_public_path__ + \"static/media/logo.b7612186.svg\";","import React from \"react\";\r\nimport logo from \"../images/logo.svg\";\r\nimport \"../components/styles/navbar.css\";\r\nimport {Link} from \"react-router-dom\"\r\nclass Nabvar extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Navbar\">\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<Link className=\"Nabvar__brand \" to=\"/\">\r\n\t\t\t\t\t\t<img className=\"Navbar__brand-logo\" src={logo} alt=\"\" />\r\n\t\t\t\t\t\t<span className=\"font-weight-light\"> PLatzi</span>\r\n\t\t\t\t\t\t<span className=\"font-weight-bold\"> Conf</span>\r\n\t\t\t\t\t</ Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Nabvar;\r\n","import React from \"react\";\r\nimport Navbar from \"./Nabvar\";\r\nfunction Layout(props) {\r\n\t// const children =children.props\r\n\treturn (\r\n\t\t//retorno el navbar y los children que recibe como props layout\r\n\t\t<React.Fragment>\r\n\t\t\t<Navbar />\r\n\t\t\t{props.children}\r\n\t\t</React.Fragment>\r\n\t); //regresar lo que el layout tienen internamente (switch)\r\n}\r\nexport default Layout;\r\n","export default __webpack_public_path__ + \"static/media/astronautas.72ac3df5.svg\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./styles/Home.css\";\r\nimport platziconfLogoImage from \"../../images/logo conf.svg\";\r\nimport astronautsImage from \"../../images/astronautas.svg\";\r\n\r\nexport default class Home extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Home\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"Home__col col-12 col-md-4\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={platziconfLogoImage}\r\n\t\t\t\t\t\t\t\talt=\"Platzi Conf Logo\"\r\n\t\t\t\t\t\t\t\tclassName=\"img-fluid mb-2\"\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h1>Badge Management System</h1>\r\n\t\t\t\t\t\t\t<Link className=\"btn btn-primary\" to=\"/badges\">\r\n\t\t\t\t\t\t\t\tStart\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"Home__col d-none d-md-block col-md-8\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={astronautsImage}\r\n\t\t\t\t\t\t\t\talt=\"Astronauts\"\r\n\t\t\t\t\t\t\t\tclassName=\"img-fluid p-4\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport \"../styles/BadgeEdit.css\";\r\nimport header from \"../../images/logo conf.svg\";\r\nimport Badge from \"../Badge\";\r\nimport BadgeForm from \"../BadgeForm\";\r\nimport PageLoading from \"./PageLoading\";\r\n\r\nimport api from \"../../api\";\r\nclass BadgeEdit extends React.Component {\r\n\tstate = {\r\n\t\tloading: true,\r\n\t\terror: null,\r\n\t\tform: {\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName: \"\",\r\n\t\t\temail: \"\",\r\n\t\t\tjobTitle: \"\",\r\n\t\t\ttwitter: \"\",\r\n\t\t},\r\n\t}; // inicio el state vacio con un objeto form\r\n\t//metodo que actualiza el estado llenando el objeto con la info\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchData(); //cuando el componente se monte empiezo a buscar los datos\r\n\t}\r\n\tfetchData = async (e) => {\r\n\t\tthis.setState({ loading: true, error: null });\r\n\t\ttry {\r\n\t\t\tconst data = await api.badges.read(this.props.match.params.badgeId); //obtener el id del badge\r\n\t\t\tthis.setState({ loading: false, form: data }); //paso la data que traje al elemento form para rellenar el form con la info previa\r\n\t\t} catch (error) {\r\n\t\t\tthis.setState({ loading: false, error: error });\r\n\t\t}\r\n\t};\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\tform: {\r\n\t\t\t\t...this.state.form, // recuperar los valores ingresados\r\n\t\t\t\t[e.target.name]: e.target.value,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\thandleSubmit = async (e) => {\r\n\t\t//lamo a api\r\n\t\te.preventDefault();\r\n\t\tthis.setState({ loading: true, error: null }); //estado antes de hacer el POST\r\n\t\ttry {\r\n\t\t\tawait api.badges.update(this.props.match.params.badgeId, this.state.form); //update recibe el id y la info del form\r\n\t\t\tthis.setState({ loading: false });\r\n\t\t\tthis.props.history.push(\"/badges\"); //redirecciono a lapagina badges una vez se envie el form\r\n\t\t} catch (error) {\r\n\t\t\tthis.setState({ loading: false, error: error }); //error es:error porque se guarda eso y se ignora lo demas\r\n\t\t}\r\n\t};\r\n\trender() {\r\n\t\tif (this.state.loading) {\r\n\t\t\treturn <PageLoading />;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"BadgeEdit__hero\">\r\n\t\t\t\t\t<img src={header} alt=\"\" className=\"img-fluid\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* main badge */}\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-6\">\r\n\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\tfirstName={this.state.form.firstName || \"FIRST_NAME\"} //valor por omision por si no existe\r\n\t\t\t\t\t\t\t\tlastName={this.state.form.lastName || \"LAST_NAME\"}\r\n\t\t\t\t\t\t\t\temail={this.state.form.email || \"EMAIL\"}\r\n\t\t\t\t\t\t\t\tjobTitle={this.state.form.jobTitle || \"JOB_TITLE\"}\r\n\t\t\t\t\t\t\t\ttwitter={this.state.form.twitter || \"TWITTER\"}\r\n\t\t\t\t\t\t\t\tavatarUrl=\"https://s.gravatar.com/avatar/daa7525f3216837201eab4dcc82c06df?s=80\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* badge form */}\r\n\t\t\t\t\t\t<div className=\"col-6\">\r\n\t\t\t\t\t\t\t{/* EN EL EVENTO ONCHANGE LLAMO A HANDLE QUE TRAE EL ONCHANGE DEL BADGEFORM */}\r\n\t\t\t\t\t\t\t<h1>Editar usuario </h1>\r\n\t\t\t\t\t\t\t<BadgeForm\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange} //paso como prop el handleChange de BadgeEdit\r\n\t\t\t\t\t\t\t\tonSubmit={this.handleSubmit} //llamo metodo que defino en bagdeform\r\n\t\t\t\t\t\t\t\tformValues={this.state.form} //paso los valores del NEW al FORM\r\n\t\t\t\t\t\t\t\terror={this.state.error}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default BadgeEdit;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../components/styles/Modal.css\";\r\n\r\nfunction Modal(props) {\r\n\tif (!props.isOpen) {\r\n\t\treturn null;\r\n\t}\r\n\treturn ReactDOM.createPortal(\r\n\t\t//ayudan a renderizar un elemento fuera del nodo principal de nuestro sitio\r\n\t\t<div className=\"Modal\">\r\n\t\t\t<div className=\"Modal__container\">\r\n\t\t\t\t<button onClick={props.onClose} className=\"Modal__close-button\">\r\n\t\t\t\t\tx\r\n\t\t\t\t</button>\r\n\t\t\t\t{props.children}\r\n\t\t\t</div>\r\n\t\t</div>,\r\n\t\tdocument.getElementById(\"modal\")\r\n\t);\r\n}\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport Modal from \"./Modal\";\r\nfunction DeleteBadgeModal(props) {\r\n\treturn (\r\n\t\t<Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n\t\t\t<div className=\"DeleteBadgeModal\">\r\n\t\t\t\t<h1> Estas segur@?</h1>\r\n\t\t\t\t<p> Estas a punto de Eliminar el Badge</p>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button onClick={props.onDeleteBadge} className=\"btn btn-danger m-2\">\r\n\t\t\t\t\t\tEliminar\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button onClick={props.onClose} className=\"btn btn-primary m-2\">\r\n\t\t\t\t\t\tCancelar\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Modal>\r\n\t);\r\n}\r\nexport default DeleteBadgeModal;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../Pages/styles/BadgeDetailsContainer.css\";\r\nimport DeleteBadgeModal from \"../DeleteBadgeModal\";\r\nimport Badge from \"../Badge\";\r\nimport confLogo from \"../../images/logo conf.svg\";\r\nfunction BadgeDetails(props) {\r\n\tconst badge = props.badge;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"BadgeDetails__hero\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-6\">\r\n\t\t\t\t\t\t\t<img src={confLogo} alt=\"logo conf\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-6 BadgeDetails__hero-attendant-name \">\r\n\t\t\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t\t\t{badge.firstName} {badge.lastName}\r\n\t\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{/* en el siguiente div, traigo a badge y paso los props que recibe */}\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\tfirstName={badge.firstName}\r\n\t\t\t\t\t\t\tlastName={badge.lasttName}\r\n\t\t\t\t\t\t\temail={badge.email}\r\n\t\t\t\t\t\t\tjobTitle={badge.jobTitle}\r\n\t\t\t\t\t\t\ttwitter={badge.twitter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t<h2>Actions</h2>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-primary m-2 w-25\"\r\n\t\t\t\t\t\t\t\t\tto={`/badges/${badge.id}/edit`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tEditar\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={props.onOpenModal}\r\n\t\t\t\t\t\t\t\t\t// onClick={this.openModal}\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger m-2 w-25\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tEliminar\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t{/* se pasa el modal al container que maneja estado */}\r\n\t\t\t\t\t\t\t\t<DeleteBadgeModal\r\n\t\t\t\t\t\t\t\t\tisOpen={props.modalIsOpen}\r\n\t\t\t\t\t\t\t\t\tonClose={props.onCloseModal}\r\n\t\t\t\t\t\t\t\t\tonDeleteBadge={props.onDeleteBadge}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tlorem ipsum\r\n\t\t\t\t\t\t\t\t</DeleteBadgeModal>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default BadgeDetails;\r\n","import React from \"react\";\r\nimport BadgeDetails from \"./BadgeDetails\";\r\nimport PageLoading from \"./PageLoading\";\r\nimport PageError from \"./PageError\";\r\nimport api from \"../../api\";\r\n\r\nclass BadgeDetailsContainer extends React.Component {\r\n\tstate = {\r\n\t\tloading: true,\r\n\t\terror: null,\r\n\t\tdata: undefined,\r\n\t\tmodalIsOpen: false,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchData();\r\n\t}\r\n\tfetchData = async () => {\r\n\t\tthis.setState({ loading: true, error: null });\r\n\t\ttry {\r\n\t\t\tconst data = await api.badges.read(\r\n\t\t\t\tthis.props.match.params.badgeId //traigo el id desde el objeto params\r\n\t\t\t);\r\n\t\t\t//si al hacer el try la respuesta es positiva\r\n\t\t\tthis.setState({ loading: false, data: data }); //guardo la info  ue fetch en el state\r\n\t\t} catch (error) {\r\n\t\t\tthis.setState({ loading: false, error: error });\r\n\t\t}\r\n\t};\r\n\thandleOpenModal = (e) => {\r\n\t\tthis.setState({ modalIsOpen: true });\r\n\t};\r\n\thandleCloseModal = (e) => {\r\n\t\tthis.setState({ modalIsOpen: false });\r\n\t};\r\n\thandleDeleteBadge = async (e) => {\r\n\t\tthis.setState({ loading: true, error: null });\r\n\t\ttry {\r\n\t\t\tawait api.badges.remove(this.props.match.params.badgeId);\r\n\t\t\tthis.setState({ loading: false });\r\n\t\t\tthis.props.history.push(\"/badges\");\r\n\t\t} catch (error) {\r\n\t\t\tthis.setState({ loading: false, error: error });\r\n\t\t}\r\n\t};\r\n\trender() {\r\n\t\tif (this.state.loading) {\r\n\t\t\treturn <PageLoading />;\r\n\t\t}\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <PageError error={this.state.error} />;\r\n\t\t}\r\n\t\t// const badge = this.state.data; //creo una constante donde guardo el objeto state\r\n\r\n\t\treturn (\r\n\t\t\t<BadgeDetails\r\n\t\t\t\tonCloseModal={this.handleCloseModal}\r\n\t\t\t\tonOpenModal={this.handleOpenModal}\r\n\t\t\t\tmodalIsOpen={this.state.modalIsOpen}\r\n\t\t\t\tonDeleteBadge={this.handleDeleteBadge}\r\n\t\t\t\tbadge={this.state.data}\r\n\t\t\t/>\r\n\t\t); //\r\n\t}\r\n}\r\nexport default BadgeDetailsContainer;\r\n","import React from \"react\";\r\n\r\nfunction NotFound() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1> Error 404, Pagina no encontrada</h1>\r\n\t\t\t<h2> lo sentimos :( </h2>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Layout from \"./Layout\";\r\nimport Home from \"./Pages/Home\";\r\nimport BadgesNew from \"../components/Pages/BadgesNew\";\r\nimport BadgeEdit from \"../components/Pages/BadgeEdit\";\r\nimport BadgeDetailsContainer from \"./Pages/BadgeDetailsContainer\";\r\n\r\nimport Badges from \"../components/Pages/Badges\";\r\nimport NotFound from \"../components/Pages/NotFound\";\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t//solo puede tener un hijo (switch)\r\n\t\t<BrowserRouter>\r\n\t\t\t{/*  switch toma la direccion del navegador y renderiza solo una vista */}\r\n\t\t\t<Layout>\r\n\t\t\t\t{/* debo usar unos props para que el  <switch /> aparezca dentro del layout */}\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/\" component={Home} />\r\n\t\t\t\t\t<Route exact path=\"/badges\" component={Badges} />\r\n\t\t\t\t\t<Route exact path=\"/badges/new\" component={BadgesNew} />\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/badges/:badgeId\"\r\n\t\t\t\t\t\tcomponent={BadgeDetailsContainer}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route exact path=\"/badges/:badgeId/edit\" component={BadgeEdit} />\r\n\r\n\t\t\t\t\t<Route component={NotFound} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</Layout>\r\n\t\t</BrowserRouter>\r\n\t);\r\n}\r\nexport default App;\r\n","// const element = document.createElement('h1');\r\n// element.innerText = 'Hello, Platzi Badges!';\r\n\r\n// const container = document.getElementById('app');\r\n\r\n// container.appendChild(element);\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\r\nimport \"./global.css\"; //importa modificaicones a bootstrap\r\n// import Badge from \"./components/Badge\";\r\n// import BadgesNew from \"./components/Pages/BadgesNew\";\r\nimport Badges from \"./components/Pages/Badges\";\r\nimport BadgesNew from \"./components/Pages/BadgesNew\";\r\nimport App from \"./components/App\";\r\n\r\n\r\nconst container = document.getElementById('app');\r\n\r\n// ReactDOM.render(__qué__, __dónde__);\r\nReactDOM.render(\r\n\t<App\r\n\t// firstName=\"Diego\"\r\n\t// lastName=\"Dorado\"\r\n\t// jobTitle=\"Frontend Dev\"\r\n\t// twitter=\"diego_dorado\"\r\n\t// avatarUrl=\"https://s.gravatar.com/avatar/daa7525f3216837201eab4dcc82c06df?s=80\"\r\n\t/>,\r\n\tcontainer\r\n);\r\n"],"sourceRoot":""}